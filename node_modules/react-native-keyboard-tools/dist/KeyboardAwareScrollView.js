import React, { forwardRef, memo, useCallback, useImperativeHandle, useMemo, } from "react";
import { ScrollView, } from "react-native";
import { useKeyboardListeners } from "./useKeyboardListeners";
import { useKeyboardScrollView } from "./useScrollView";
// as we work with keyboard, we can skip majority of events, 200 sounds like good enough magic number
const SCROLL_EVENT_THROTTLE = 200;
const KeyboardAwareScrollViewRaw = forwardRef(({ automaticallyAdjustContentInsets, restoreScrollOnKeyboardHide = true, onScroll, ...props }, ref) => {
    const { keyboardAwareViewRef, onScrollViewLayout, onScrollViewScroll, onContentSizeChange, } = useKeyboardScrollView();
    const { keyboardHeight } = useKeyboardListeners({
        keyboardAwareViewRef,
        restoreScrollOnKeyboardHide,
    });
    const contentInset = useMemo(() => ({ bottom: keyboardHeight }), [keyboardHeight]);
    const handleScroll = useCallback((event) => {
        onScrollViewScroll(event);
        if (onScroll) {
            onScroll(event);
        }
    }, [onScroll, onScrollViewScroll]);
    useImperativeHandle(ref, () => ({
        scrollTo: ({ x = 0, y = 0, animated = true }) => {
            keyboardAwareViewRef?.current?.scrollTo({ x, y, animated });
        },
    }), [keyboardAwareViewRef]);
    return (<ScrollView {...props} automaticallyAdjustContentInsets={automaticallyAdjustContentInsets} contentInset={contentInset} ref={keyboardAwareViewRef} onLayout={onScrollViewLayout} onScroll={handleScroll} onContentSizeChange={onContentSizeChange} scrollEventThrottle={SCROLL_EVENT_THROTTLE}/>);
});
export const KeyboardAwareScrollView = memo(KeyboardAwareScrollViewRaw);
